#!/bin/bash

usage(){
   if [[ $# -gt 0 ]]; then
      echo "$@"
      echo
   fi

   echo "Usage: $0 --source-project-name <name> [--source-project-version <version>] --build-file <builder.json> --output-file <ami.json>"
   echo
   echo "This script will search Amazon's AMI registry and find AMI IDs of a project, optionally a"
   echo "specific version."
   echo
   echo "Script is designed to be invoked by nubis-builder"
   echo
   exit 1
}

fail(){
   echo "$@"
   echo
   exit 1
}

aws_find_ami_args=""

source_project_name="nubis-base"
source_project_version="*"

while [[ ! -z "$1" ]]; do
   case "$1" in
      --source-project-name)
         if [[ "$2" ]]; then
             source_project_name="$2"
         fi
         shift
         ;;
      --source-project-version)
         if [[ "$2" ]]; then
             source_project_version="$2"
         fi
         shift
         ;;
      --build-file)
         if [[ -f $2 ]]; then
            build_file=$2
         else
            fail "Build file $2 is unreadable"
         fi
         shift
         ;;
      --output-file)
         output_parent=$(dirname $2)
         if [[ ! -d $output_parent ]]; then
            fail "output file $2 doesn't have to exist, but it's parent directory must"
         fi
         output_file=$2
         shift
         ;;
      *)
         usage "Invalid option $1"
         ;;
    esac
    shift
done

if [[ ! "$build_file" ]]; then
   usage "--build-file is a required parameter"
fi

if [[ ! "$output_file" ]]; then
   usage "--output-file is a required parameter"
fi

# Region
aws_region=$(jq --raw-output '"\(.variables.aws_region)"' < $build_file)
nubis_account=$(jq --raw-output '"\(.variables.nubis_account_id)"' < $build_file)

if [[ "${nubis_account:-null}" == "null" ]]; then
  # Official Nubis Marketplace Account ID
  nubis_account=589768463761
fi

# Verify that the parameter exists
if [[ "${aws_region:-null}" == "null" ]]; then
   fail "Region not specified in $build_file, exiting"
fi

for builders in $(jq --raw-output '.builders[] | "\(.type)@\([.tags | .platform][])"' < $build_file); do
   type=${builders%@*}
   platform=${builders#*@}

   case $type in
      docker)
          ;;
      amazon-ebs)
         aws-find-ami --build-file $build_file \
                      --output-file $output_file \
                      --owners $nubis_account \
                      --region $aws_region \
                      --virtualization-type hvm \
                      --root-device-type ebs \
                      --architecture x86_64 \
                      --name "$source_project_name*$source_project_version*ebs*$platform*" || fail "aws-find-ami for $platform ebs had non-zero exit status"
         ;;
      amazon-instance)
         aws-find-ami --build-file $build_file \
                      --output-file $output_file \
                      --owners $nubis_account \
                      --region $aws_region \
                      --virtualization-type hvm \
                      --root-device-type instance-store \
                      --architecture x86_64 \
                      --name "$source_project_name*$source_project_version*instance-store*$platform*" || fail "aws-find-ami for $platform instance-store had non-zero exit status"
         ;;
      *)
         fail "unknown build type $type"
         ;;
   esac
done
