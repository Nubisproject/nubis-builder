#!/bin/bash

if [[ $# -lt 1 ]]; then
   echo "Usage: $0 --stack-name <name> --key-prefix <prefix> --consul-address <address> --datacenter <datacenter>"
   echo
   echo "This tool will look at a CloudFormation stack's output names and values and insert them into consul"
   echo "under the key prefix path."
   exit 1
fi

fail(){
   echo "$@"
   exit 1
}

while [[ "$1" ]]; do
   case "$1" in
      --stack-name)
         if [[ ! "$2" ]]; then
            fail "Must pass parameter to $1"
         fi

         stack_name="$2"
         shift
         ;;
      --key-prefix)
         if [[ ! "$2" ]]; then
            fail "Must pass parameter to $1"
         fi

         key_prefix="$2"
         shift
         ;;
      --consul-address)
         if [[ ! "$2" ]]; then
            fail "Must pass parameter to $1"
         fi

         consul_address="$2"
         shift
         ;;
      --datacenter)
         if [[ ! "$2" ]]; then
            fail "Must pass parameter to $1"
         fi

         datacenter="$2"
         shift
         ;;
      *)
         fail "Invalid parameter passed \"$1\""
         ;;
    esac
    shift
done

hash curl 2>/dev/null || fail "Please install curl to use this tool."
hash jq 2>/dev/null || fail "Please install jq to use this tool. https://github.com/stedolan/jq"
hash aws 2>/dev/null || fail "Please install the AWS CLI API to use this tool. https://aws.amazon.com/cli/"

if [[ ! "$stack_name" ]]; then
   fail "The parameter --stack_name is required."
fi

if [[ ! "$key_prefix" ]]; then
   fail "The parameter --key_prefix is required."
fi

if [[ ! "$consul_address" ]]; then
   fail "The parameter --consul-address is required."
fi

stack_outputs=$(aws --output json cloudformation describe-stacks --stack-name ${stack_name})
if [[ $? -eq 0 ]]; then
   for key in $(echo "$stack_outputs" | jq --raw-output '.Stacks[] | .Outputs[] | "\(.OutputKey)"'); do
      value=$(echo "$stack_outputs" | jq --raw-output ".Stacks[] | .Outputs[] | select(.OutputKey==\"${key}\") | .OutputValue")

      echo "Storing key ${key} into http://${consul_address}/v1/kv/${key_prefix}/${key}"
      curl -v -X PUT -d "$value" "http://${consul_address}/v1/kv/${key_prefix}/${key}?dc=${datacenter}"
   done
fi
